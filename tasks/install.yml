---
- name: install | repo gpg key
  when: mongo_repo
  block:
    - name: install (RedHat) | repo gpg key
      rpm_key:
        key: https://www.mongodb.org/static/pgp/server-{{ mongo_version }}.asc
      when: ansible_os_family == 'RedHat'
    - name: install (Debian) | repo gpg key
      apt_key:
        url: https://www.mongodb.org/static/pgp/server-{{ mongo_version }}.asc
      when: ansible_os_family == 'Debian'

- name: install | repo
  when: mongo_repo
  block:
    - name: install (RedHat) | repo
      yum_repository:
        name: "mongodb-org-{{ mongo_version }}"
        description: "MongoDB {{ mongo_edition }} repo"
        file: mongodb
        baseurl: >-
          https://repo.mongodb.{{- (mongo_edition == 'enterprise') | ternary('com', 'org') -}}/yum/redhat/$releasever/mongodb-{{- mongo_edition }}/{{- mongo_version }}/x86_64/


        enabled: true
        gpgcheck: true
        gpgkey: https://www.mongodb.org/static/pgp/server-{{ mongo_version }}.asc
      when: ansible_os_family == 'RedHat'
    - name: Install (Debian) | repo
      apt_repository:
        filename: "mongodb-org-{{ mongo_version }}"
        repo: "deb [ arch=amd64,arm64 ] https://repo.mongodb.{{- (mongo_edition == 'enterprise') | ternary('com', 'org') -}}/apt/{{ ansible_distribution | lower }} {{ ansible_distribution_release }}/mongodb-org/{{ mongo_version }} main"
        update_cache: true
      when: ansible_distribution == 'Debian'
    - name: Install (Ubuntu) | repo
      apt_repository:
        filename: "mongodb-org-{{ mongo_version }}"
        repo: "deb [ arch=amd64,arm64 ] https://repo.mongodb.{{- (mongo_edition == 'enterprise') | ternary('com', 'org') -}}/apt/{{ ansible_distribution | lower }} {{ ansible_distribution_release }}/mongodb-org/{{ mongo_version }} multiverse"
        update_cache: true
      when: ansible_distribution == 'Ubuntu'

- name: install | dependencies
  block:
    - name: install (RedHat) | dependencies
      dnf:
        name:
          - python3-devel
          - python3-pip
      when: ansible_os_family == 'RedHat'
    - name: install (Debian) | dependencies
      apt:
        name:
          - python3-dev
          - python3-pip
      when: ansible_os_family == 'Debian'

- name: install | mongo edition {{ mongo_edition }}
  block:
    - name: install (RedHat) | mongo edition {{ mongo_edition }}
      dnf:
        name: mongodb-{{ mongo_edition }}
      when: ansible_os_family == 'RedHat'
    - name: install (Debian) | mongo edition {{ mongo_edition }}
      apt:
        name: mongodb-{{ mongo_edition }}
      when: ansible_os_family == 'Debian'

- name: install | group mongodb
  group:
    name: mongodb
    system: true

- name: install | user mongodb
  user:
    name: mongodb
    system: true
    group: mongodb
    home: "/home/mongodb"
    create_home: true
    shell: /sbin/nologin
  register: set_user

- name: install | data folder
  file:
    state: directory
    path: "{{ mongo_storage.dbPath }}"
    mode: "0770"
    owner: mongodb
    group: mongodb

- name: install | PID folder
  file:
    state: directory
    path: "{{ mongo_pidPath }}"
    mode: "0755"
    owner: mongodb
    group: mongodb

- name: install | remove default data folder when set differently
  file:
    state: absent
    path: /var/lib/mongo
  when: mongo_storage.dbPath != '/var/lib/mongo'

- name: install | remove log folder when set differently
  file:
    state: absent
    path: /var/log/mongodb
  when: >-
    '/var/log/mongodb' not in mongo_systemlog.path or mongo_systemlog.destination != 'file'


- block:
    - name: install | ensure log folder exists
      file:
        path: "{{ mongo_systemlog.path | dirname }}"
        state: directory
        owner: mongodb
        group: mongodb
        mode: "0775"

    - name: install | stat if log file exist
      stat:
        path: "{{ mongo_systemlog.path }}"
      register: mongo_log_check

    - name: install | ensure log files exist
      copy:
        content: ""
        dest: "{{ mongo_systemlog.path }}"
        force: true
        group: mongodb
        owner: mongodb
        mode: "0755"
      when: not mongo_log_check.stat.exists

  when: >-
    '/var/log/mongodb' not in mongo_systemlog.path and mongo_systemlog.destination == 'file'


- name: install | pymongo {{ mongo_pymongo_version }}
  pip:
    name: pymongo
    executable: pip3
    version: "{{ mongo_pymongo_version }}"

- name: install | reload daemons
  systemd:
    daemon_reload: yes

- name: install | enable and start mongo edition {{ mongo_edition }}
  systemd:
    name: mongod.service
    state: started
    enabled: true
